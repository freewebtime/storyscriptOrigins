* ссылка = function (@урл, @текст) {
  return "[*@текст;](*@урл;)";
}

* фото = function (@урл, @текст, @imgRoot) {
  if (!@imgRoot) {
    @imgRoot = "https:\//raw.githubusercontent.com/freewebtime/storyscriptOrigins/master/resources/";
  }
  return "![*@текст;](*@imgRoot;*@урл;)";
}

# Storyscript. Инструкция
Это - краткая инструкция пользователя языка программирования *ссылка("https:\//github.com/freewebtime/storyscript", "storyscript"); в *ссылка("https:\//code.visualstudio.com/", "Microsoft Visual Studio Code");

## Начало работы
Установите *ссылка("https:\//code.visualstudio.com/", "Microsoft Visual Studio Code");
*фото("vscode_new.png", "vscode");

Установите *ссылка("https:\//marketplace.visualstudio.com/items?itemName=jackstorytailor.storyscript-vscode", "Storyscript плагин для vscode");
*фото("install_extension.png", "пустая папка");


Самый простой способ приступить к работе - это открыть пустую папку в vscode и скопировать в нее тестовый проект

Откройте пустую папку
*фото("vscode_empty.png", "пустая папка");

Кликните правой клавишей мыши в корне проекта и выберите из выпадающего меню "Initialize example project in a working root"
*фото("init_example_project.png", "скопировать тестовый проект в корневую папку");

Эта операция скопирует в корневую папку тестовый проект. Учтите, что если в корневой папке уже есть такие файлы, то они будут перетерты. Подтверждайте копирование
*фото("confirm_init_example_project.png", "подтвердить копирование");

Тестовый проект скопирован в корневую папку. Примерно так должна выглядеть файловая структура проекта
*фото("example_project_created.png", "тестовый проект создан");

Обновите node-модули. Для этого

Откройте терминал
*фото("open_terminal.png", "npm install в терминале");

Вбейте комманду "npm install" или "npm i" и нажмите "ENTER"
*фото("npm_install.png", "npm install в терминале");

node-модули обновлены
*фото("node_modules_created.png", "npm install в терминале");

терминал можно закрыть
*фото("close_terminal.png", "закрыть терминал");


Исходные файлы истории хранятся в папке story (\*.sts)
*фото("story_source_files.png", "исходники истории");

Подготовка проекта завершена. Это его рабочее состояние

#### Теперь выполним сборку тестового проекта. 
Откройте файл с исходниками истории. Например, story/index.sts

Открывайте Command Palette (Меню View -> Command Palette или комбинация клавиш Ctrl+Shift+P) 
*фото("command_palette.png", "command palette");

*фото("command_palette_openned.png", "command palette openned");

Выбирайте комманду "Compile: Compile and show preview" (по-умолчанию Ctrl+Alt+P)
*фото("compile_and_show_preview.png", "compile and show preview");

В папке src сохраняется история на typescript. В папке out будет эта история на javascript
*фото("compiled_story.png", "compiled story");

Когда сборка истории завершена, открывается предпросмотр
*фото("preview_story.png", "compiled story");

Окно предпросмотра можно размещать как удобно
*фото("layout_2.png", "compiled story");
*фото("layout_3.png", "compiled story");

Текст, показанный в окне предпросмотра, сохраняется в файл "story output.txt" в корне проекта
*фото("story_output.png", "story output");

## Для всех (база)
Упрощенная инструкция затрагивает только базовый функционал.
Этого хватит, чтобы собрать сценарий, и предполагается, что пользователю не понадобится никаких технических знаний

### Текст истории

#### Обычный текст

#### Экранирование спец-символов

### Переменные

### Вставки в текст

### Импорт других файлов

## Для программистов
Усложненная инстркукция. Предполагается, что без объяснений ее должны понять программисты и всякие технари

### Синтаксис

### Как это работает // что во что компилится и где настройки

## _
[Сидоренко Евгений](https:\//www.facebook.com/evgeny.sydorenko), февраль 2019